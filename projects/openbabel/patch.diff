diff --git a/test/CMakeLists.txt b/test/CMakeLists.txt
index 300718a2a..e3c7fd340 100644
--- a/test/CMakeLists.txt
+++ b/test/CMakeLists.txt
@@ -303,3 +303,8 @@ if(TEST_DEPICTION AND UNIX)
         alias ${CMAKE_SOURCE_DIR}/test/files/alias.png)
   endif()
 endif()
+
+if(DEFINED ENV{LIB_FUZZING_ENGINE})
+  add_executable(fuzz_obconversion fuzz/fuzz_obconversion.cpp)
+  target_link_libraries(fuzz_obconversion ${libs} $ENV{LIB_FUZZING_ENGINE})
+endif()
diff --git a/test/fuzz/fuzz_obconversion.cpp b/test/fuzz/fuzz_obconversion.cpp
new file mode 100644
index 000000000..2cc73d1f9
--- /dev/null
+++ b/test/fuzz/fuzz_obconversion.cpp
@@ -0,0 +1,32 @@
+#include <stdio.h>
+#include <stdlib.h>
+#include <stdint.h>
+#include <stdarg.h>
+#include <string.h>
+
+#include <openbabel/babelconfig.h>
+#include <openbabel/mol.h>
+#include <openbabel/obconversion.h>
+#include <cstdlib>
+#include <stdio.h>
+#include <iostream>
+
+
+extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {
+    using namespace std;
+    using namespace OpenBabel;
+    OBConversion obconv;
+    OpenBabel::OBMol obmol;
+    std::string str (reinterpret_cast<const char*>(Data), Size);
+
+    auto informats = obconv.GetSupportedInputFormat();
+    for(const auto& value: informats) {
+        auto f = value.substr(0, value.find(" -- "));
+        if(!obconv.SetInFormat(f.c_str())){
+            continue;
+        }
+        obconv.ReadString(&obmol, str);
+    }
+    return 0;
+}
+


Installed docker-ce
======================

in libpng/Dockerfile

-MAINTAINER mmoroz@chromium.org
+MAINTAINER glennrp@gmail.com

======================

in libpng/build.sh

disable libpng WARNING:
-cat scripts/pnglibconf.dfa | sed -e "s/option STDIO/option STDIO disabled/" \
+cat scripts/pnglibconf.dfa | \
+  sed -e "s/option STDIO/option STDIO disabled/" \
+      -e "s/option WARNING /option WARNING disabled/" \

Don't build tools, just libpng:
-make -j$(nproc) all
+make -j$(nproc) libpng16.la

======================

In libpng/libpng_read_fuzzer.cc
added PNG_CLEANUP macro and invoked it 4 places
(in setjmp blocks and at final return).

======================

Attempted to run the fuzzer locally as suggested
in ... with

clang++ -g -fsanitize=address -fsanitize-coverage=trace-pc-guard \
  libpng_read_fuzzer.cc libFuzzer.a
./a.out

but it couldn't find liibFuzzer.a.  It seems that my clang
is too old because libFuzzer.a is supposed to be included
in clang versions > 20 April 2017.

======================

So I ran apt-get dselect-upgrade clang
but it appears to be upgrading everything.
It took nearly an hour, but didn't change
clang or clang++ from version 3.8.0

======================

Tried removing the unrecognized -fsanitize-coverage option
but then the compiler complains about nullptr which is
where I was the other day trying to compile the target
manually.

======================

Went to the clang web site. Apparently the required version
is 4.0.1, July 2017 (4.0.0 is prior to 20 April). 4.0.0
is available for Ubuntu, 4.0.1 is not, so I downloaded the
Debian-8 version.

======================

Looks good:

studio> /home/glennrp/Clang/clang+llvm-4.0.1-x86_64-linux-gnu-debian8/bin/clang --version
clang version 4.0.1 (tags/RELEASE_401/final)
Target: x86_64-unknown-linux-gnu
Thread model: posix
InstalledDir: /home/glennrp/Clang/clang+llvm-4.0.1-x86_64-linux-gnu-debian8/bin

======================

But, it still doesn't like the "nullptr" in  libpng_read_fuzzer.cc

======================


#!/bin/bash -eu
# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
################################################################################

function build_native_go_fuzzer() {
	fuzzer=$1
	function=$2
	path=$3
	tags="-tags gofuzz"

	if [[ $SANITIZER = *coverage* ]]; then
		echo "here we perform coverage build"
		fuzzed_package=`go list $tags -f '{{.Name}}' $path`
		abspath=`go list $tags -f {{.Dir}} $path`
		cd $abspath
		cp $GOPATH/native_ossfuzz_coverage_runner.go ./"${function,,}"_test.go
		sed -i -e 's/FuzzFunction/'$function'/' ./"${function,,}"_test.go
		sed -i -e 's/mypackagebeingfuzzed/'$fuzzed_package'/' ./"${function,,}"_test.go
		sed -i -e 's/TestFuzzCorpus/Test'$function'Corpus/' ./"${function,,}"_test.go

		# The repo is the module path/name, which is already created above
		# in case it doesn't exist, but not always the same as the module
		# path. This is necessary to handle SIV properly.
		fuzzed_repo=$(go list $tags -f {{.Module}} "$path")
		abspath_repo=`go list -m $tags -f {{.Dir}} $fuzzed_repo || go list $tags -f {{.Dir}} $fuzzed_repo`
		# give equivalence to absolute paths in another file, as go test -cover uses golangish pkg.Dir
		echo "s=$fuzzed_repo"="$abspath_repo"= > $OUT/$fuzzer.gocovpath
		go test -run Test${function}Corpus -v $tags -coverpkg $fuzzed_repo/... -c -o $OUT/$fuzzer $path
	else
		go-118-fuzz-build -o $fuzzer.a -func $function $abs_file_dir
		$CXX $CXXFLAGS $LIB_FUZZING_ENGINE $fuzzer.a -o $OUT/$fuzzer
	fi
}

path=$1
function=$2
fuzzer=$3
tags="-tags gofuzz"

# Get absolute path.
abs_file_dir=$(go list $tags -f {{.Dir}} $path)

# TODO(adamkorcz): Get rid of "-r" flag here.
fuzzer_filename=$(grep -r -l --include='*.go' -s "$function" "${abs_file_dir}")

# Test if file contains a line with "func $function" and "testing.F".
if [ $(grep -r "func $function" $fuzzer_filename | grep "testing.F" | wc -l) -eq 1 ]
then
	build_native_go_fuzzer $fuzzer $function $abs_file_dir
else
	echo "Could not find the function: func ${function}(f *testing.F)"
fi